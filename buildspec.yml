version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    AWS_ACCOUNT_ID: "869620365293"
    IMAGE_REPO_NAME: query-profiler-frontend
    IMAGE_TAG: latest
    EKS_CLUSTER_NAME: query-profiler-dashboard
    EKS_KUBECTL_ROLE_ARN: arn:aws:iam::869620365293:role/CodeBuildKubectlRole

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing global dependencies...

  pre_build:
    commands:
      - echo Installing dependencies...
      - cd query-profiler-frontend && npm install

  build:
    commands:
      - echo Build started on `date`
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Building the React application...
      - export REACT_APP_API_URL=$API_URL && npm run build
      - echo Running tests...
      - npm test -- --coverage --ci --watchAll=false
      - echo Checking build output...
      - ls -la build/
      - cd ..
      - echo Current directory contents
      - ls -la
      - echo Query profiler frontend contents
      - ls -la query-profiler-frontend/
      - echo Creating simple Dockerfile...
      - echo 'FROM nginx:alpine' > query-profiler-frontend/Dockerfile
      - echo 'COPY build /usr/share/nginx/html' >> query-profiler-frontend/Dockerfile
      - echo 'EXPOSE 80' >> query-profiler-frontend/Dockerfile
      - echo 'CMD ["nginx", "-g", "daemon off;"]' >> query-profiler-frontend/Dockerfile
      - echo Dockerfile contents
      - cat query-profiler-frontend/Dockerfile
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG query-profiler-frontend/
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Image pushed to $REPOSITORY_URI:$IMAGE_TAG
      - echo "IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG" > image_uri.txt
      - echo Storing image URI in Parameter Store...
      - aws ssm put-parameter --name "/query-profiler/latest-image-uri" --value "$REPOSITORY_URI:$IMAGE_TAG" --type String --overwrite
      - echo Triggering infrastructure deployment...
      - DEPLOY_BUILD_ID=$(aws codebuild start-build --project-name query-profiler-infrastructure-deploy --environment-variables-override name=IMAGE_URI,value=$REPOSITORY_URI:$IMAGE_TAG --query 'build.id' --output text)
      - echo "Infrastructure deployment started with build ID $DEPLOY_BUILD_ID"

artifacts:
  files:
    - image_uri.txt

cache:
  paths:
    - 'query-profiler-frontend/node_modules/**/*'